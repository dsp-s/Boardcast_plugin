plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'maven-publish'  // 添加 maven-publish 插件
}

group = 'org'
version = '2.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.7-R0.1-SNAPSHOT")
}

// 发布配置
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            // 添加插件信息
            groupId = project.group
            artifactId = project.name
            version = project.version
            
            // 可选：添加源码和javadoc
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/${{ github.repository }}"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

// 创建源码jar任务
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

// 创建javadoc jar任务
task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

tasks {
    runServer {
        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// 确保在发布前先构建
publish.dependsOn build
